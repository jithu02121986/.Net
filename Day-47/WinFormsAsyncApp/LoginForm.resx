<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxAQDw8PEBAQDw8PDQ0PDw8PFRAPDw0OFREWFhURFRUY
        HSggGBolGxUVITEhJikrLi4uFx8zODMtNygtLiv/2wBDAQoKCg4NDhcQEBotJR0lLS0tLS0tKy0tLS0t
        LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rLSstLS3/wAARCAC3ARMDAREAAhEBAxEB/8QA
        GwABAQADAQEBAAAAAAAAAAAAAQACBAUDBgf/xAA3EAACAgECBAMHAQcEAwAAAAAAAQIRAwQSBSExYRNB
        UQYiMnGBkaFCI1JyscHR8BQzc+GC4vH/xAAbAQEBAQEBAQEBAAAAAAAAAAAAAQIDBAUGB//EADYRAAIC
        AQIDBQYEBgMBAAAAAAABAhEDBCESMUEFE1FhcSKBkaHB8AYysdEUI0JSguEzYnIW/9oADAMBAAIRAxEA
        PwD5ZI/ZnyjJJE3KVIqIVFBkkibgypDcoFIKQBlSJuUqKQgDJJE3A0huUikFAo0ibgqKCoAypE3BUhuC
        ooFIgMqQ3AUUCkAZUibgqG4GigySI2wNIzuBopBSAMqRNylRQVAHEopBooGgBoAQBoAaAGgCAGgBAIFE
        AQCooEASAqAGgBAIAaAGgBAKgBoAQDJIhBIBSAEAQUUgBAGgDi32RaBUUgoAyvsiUUikEAyT7IlFIUCK
        QUyUUb7IUCKCRQZX2RmgRQVAGSJQG+yFACgUAZX2RKBAFRQZIlAb7IUCSKDJGWBslASkIFMkyUBLQIAy
        QYMiA4aRsg7SWBooKgDJIAtpLAlApApUANAFRQZUSwVCwVACkANCwNAFQA0LA0LBlDHKXSLl8k2csufF
        i/5JqPq0v1NRhKXJWZPDJdYyX0Zwh2jpJuo5YP8AyX7mnhyLnF/Ax2nrtHMSgUiWDKiWQqAEAaBRoWBS
        AFIAUhYMkiAaKDho0QyRKBFAgChRRsUCAJAGQpAigQBRAIoEAQAkpASggDd4dw7JnfuKop+9N8ox/u+x
        8vtLtbTdnwvK/afKK5v9l5vY7YcE8r9nl4n0ej4Jhx/F+0l5ufT6R6H8/wBf+Jdbqm1B93Hwjz98ufwo
        +ri0eOHPd+f7Ha0+DD0luivJxqvtR8aCxSleVyt9fu2el2uR7ZeB4skX4c1J/uypP7np/g4TV4Z35P7+
        hjja/Mj5Limh8KXvxuF010lD5PyOuh7S1WjnWOVV/S90/VfVb+ZMmGGRbo5eu0TxOLvdjmrhP19U+6P6
        T2T2rj7Qw8cVUltKPg/qn0Z8bUYHilT5dDWPqHnMhRSAEAUAIoCAKAMkSgIAlBxNvdFsEUhkkCjt7olg
        qKCKDJR7olgaFgCgySJYHb3RLBUUEAZbe6JYKhYIoMkiWDo8G4U88m5OsUPjkurf7q7/AMj4nbfbMez8
        W2+SX5V9X5L5vbxPTptO8svLqfQS1UVWLFFKMeSUeiP5dmyZM83lyyuT5tn24xUVSWxu4NPJLfKlSv3u
        kV6u+S+p0xYZOSilcnyXN/D79CSkl6GhquP4oulKWVrzj8P3f9D9Lp/wvq8y4szUfXd/D/Z4563HHaO5
        r6T2zw7qlSV1cZJtfy/B2y/hGSjeLIuL0r52zC18W/aR1uOTjmxb01JShakuakq5M/I5+OGbgybTWz9x
        7401a5HH4dh8bRZcb5yxqWSHqpQTf5Vr6n2OxdU9L2jBp7S9l+/9nTOGphx4n5bnAo/qVnw6IAUgBolg
        aKBAMkiWBSFgUUCkQDQsHDNkEAQUQCKBoAQBAGiAQCAIAQBAEAgD20unlknHHBXKbpf3fZdTjqNRDT4p
        ZcjqMVb+/wBDUIOclFc2fTcQmsMIabF6VfnJ+cn8z+QavV5NbqJ6jL16eC6L3f7P0GPGscVFHV4ZoYaf
        C9RmaUYq3J8232Xm75LuXR6bNqcsYYlu3t7ub9ETJOMIts+V43xnJqZV8GJP3cSfL+KX70v8R/T+y+yc
        Ohh7O83zk+b/AGX2z4ubPLK9+XgaWk06yScG6uE6+dUfRytqOxxirZ8vwLT+LqHCcZNRWPLuTgo4Yxfv
        eLGT96L6cua5nx9fmy45JRls/iejDCMlujqce0r0cfExZJ1knklsxKcIxg3cVuuny/kbxZoanG++gpUl
        zqTfjsySg8cvZdX7jpcC1eux49+nnDUKeSeNKHh5sUsbx3u38mne5NPzr15/MjpezcmXjlj4GuTTa+S2
        +R3cs8VSlZzNLxGUpxxqClJzjBV7q3u9sW3yTdPrXQ/SZNRjx/ndHijCUuSNmOuh53Hyd86f0Oxk98ea
        L6STAPWgBAFACAZIAQBQBEBxUbBlyJuCZUCKDJUTcDyG4AoMkQDyJuCKCAHkTcDyG4IoFADyJuD6PgeB
        YMMtTPlKcWsd+UPOX1f4Xc/A/ivtF5ci0WN7LeXr0Xu5vza8D6uhw0u8fuNn2a0ctTm8WXRvlf6Yrqz8
        t3fFJY17/qe66VmHtpxZZMq08P8AawOuXSWRcn9ua+dn9G7A7PWHF3zVOS28o9PjzfuPj6rLxS4fD9T5
        ln6FWeQ9NLm8OcZr9L/FUSUeJUVOjW4v7N+JungkskcqbnBS2NNu2k3yq+dPoeeUVJcMkXlujX4stVkj
        4eXFkjj92owUnCLUdtpq65d/M54tPixqo/HqalOUnuevCuOSxrJHIlLHHFhxYcMYqMaTrI5O+Ta7P5Hk
        l2b7acHS+Z0Wo2po0uG6yOnzZs22bhLa4YMb9yc93LxL67VVPryNa3RyyVKPNLfxYw5UtmdT2xeL3PDc
        d2KVSxQilfNSe6S5NO/Lpz7mdLDMsMrtXunz+RcjjxI6WDhWHJgahzy4I5bw4JrLGGXJU1DfJJtLm66r
        dXkeXS6rJinwzezau7+9zpkxxkrXyOV7PaWWolkSb3Qhl/ZqM0k6vFLxa2O2ncetNOz3anXTw5VFrb6H
        LHiUo3e5v59O8U3jk4uUatwe5c10+a6HuxZe8ipLa/E4yjwujA6bmRRQZIgFE3AlKQBxToQgBoAQBAGg
        BICAEAgBAEAgCAN2Gi9xNtqT51ypLyMOe5aLFpEpLe24eahSk+3M55pZeB91XF0u6+RYqN+1y8jo8T1y
        zuENrxY1S7KK6LkfzvJ+Hu0McpZGlNu3ae9vrvR9eOrwtVyPoJcTw6TRN4cmOebJ7kVCUZPH3aXSuvPs
        duyexs086jng0ucrVbLlH3vnXQzn1MVG4v0Phmz+iI+QRQJAd/Qwjp9NLLL48yT5+WP9K+vX7H88/EXa
        eTPq1gwSaUObTauXXl4cvWz62jwKOPikuf6G77MaKWoac23GT6fux9bPHi7X18JqEMjfqk/XmrOstPia
        txOf7QZ8EdRkx48ccuKD23kqTc18VOul8vofv9A8uTBHJl2k99vDp7+p8nKoxk1Hkct4NHLrhljfrBul
        9L/oevhkupz2PN8G08vg1Dj/AMiX/qXikuaGxni4LnhGUcU8coSmpy2PbKU1Handejrqc6x8XG47mrdV
        Z5aXSajBOD2ZYwjnhmyQx9MriqqTV8un2Ry1GnxZk+j8SwnKBtanVzzT3yik4w2ulTpXW7vzS+x0w4o4
        Y8MROTk7Z5HoOZkgBAFACQpApx7ZukZKigUyUDLcxSBAEAZWyUgVigRQKZKA7mKQAoEA2dDi3y5/DHm/
        6IxOkio6OR2c0is8maBi2SgYSLQPGWJelfLkaIYPHXR/fmUhnp5RUk8icoqm1Gk5c+jvyPPqY5njawNK
        XRu6Xnsbg437XI9+K8TWecVL9ljtW5dK+nQ/Bf8AzuuwXJxU3/1d/rTPqrV4pbXXqfX/AOvhpdB4uKUZ
        Tzx2YJQakkvOaa9Ov0XqTsbs2WbVcOSLVbyTVUk+X+T+SGpzKMLXu+/I+Htn9Go+ONigVADF1zXJ+qDV
        g2MetyrpOX197+Zh44+BbZajVTyVvlddFySLGCjyDdnkjRDKzNIDZaAopRMtFKxQOMkdTJltZLQLaEwJ
        QKiZtAdotAqKBSAHaycSBUWwVADtJaA7WLQOzgweHBR83zl8zhKVs2kEkLIebReJAwkaBgwDFotoUYSR
        bRk85FBo6yTfurzNLYH0/s37PRlinF+7abjL93K6519Of/w8eo1HBJV9o6xhxHN1WmlinLHNVKLpr+q7
        HohJSVo5tU6PJI0QdpLQoaLYIAyoWDJIzaBFAoFMqJaKVCwRQcejoZGgBAEgKgBoAQCoAQBoAgCAOjwf
        S7pOb+GHTvI5ZZ0qNRVnQy9TijR4yRsh5NGkQ82UGLAPORUDFlIeGedJs0iGHBdI8uXdV86XdicuFFSs
        /TdNiWLHGC8lz7vzPjybnKz0LZUfK+1OpjPJBJLdCLuXnT6Rf5f1PfpocMWcZu2cQ9BgQBAEAUAZACgU
        UCkQCgBAOTSN7mQAMkgBpE3BFBAGVIm4KhuD20umnllsxxc5ei/r6HDU6rDpod5mkorz+nVvyRuEJTdR
        Vm7PhmPHyzajHCXnDHeWS7OuSfzPmx7T1OffTaduP902oL1S3b+R27mEfzz9y3PKeHTfpzTT9Z43t/Db
        /Bvvu1Fu8UH5KTT+aonDg/ufwPGWjncUqlGTqM4PdBv0vqn2dM7aftGGSfdZIuE/7ZdfR8mjE8LS4k7X
        ij6THp1jxxgvJc/mac+KVlSpHhOJpNkPCaNpkPGSNEPNotkMGi7g85FBgzRDnaqW6SgnzbNKyH2vsxoF
        jhva6Ko95ep4tRNv2TrBVudHX6xQhKb6JX835L7nLHjt0WTPjMuRyk5SfOTbfzPoJVsjkY8huQigUANI
        m4MgCKDJGdzQl3AAGSIBobg5B0MiAQAgCANAEANAHb4Wp+BPfk8HSqT3ygksuebX+2n1f+fT8/2j3a1U
        O6gp6hr2eLeMI/3NdPduz1Yb4HxOofN+R741JQUsWPT6TFL4J59ssuRevvdfoj52WGGeR48zyajIvzKO
        0I+VJpLw6vxO0XJK41BdL5s1dTmzJOTnps8F12rA6XdJKSO2DR6GWRY/4bJik+T3S+Kb+ZJZMqV8akja
        4Jpk7zKDx2q2qTcG0+TSfNfJt+R9WOGeFOEsjmunFVrx362cOJS3Sr0OlkibRDVyQOiZDXnE2mQ8JRNJ
        kPGaNIh5yRoh5soNXVZNqZpEZn7PaF5J72ur5EyS4UErPuE0korolX/Z4Kt2zqfP+0Gr3SWJdI85d5en
        0X8z14Y0rOcmck7GRAEAgBQBkAIKKBSIBAFACAclGzJlfYlAhQKigyRKBX2FAqKDOC5pXVtK3zS7mZcg
        d3VKGaU8eOVabR6eUoNK/EkquVerb/Hc/OYXm0kY5skbzZ8iTT/pW9L/ABivieyXDkbin7MV9/E8o6eE
        YYXljk1GbNBeFiUnFQxfp5838l0+Vc95M+XNkzRw5FixY37U6TblzfPZV1fNsijGKi5Lik+S8jDUcJyP
        LFeBLDCXKm3NWuq3eT7Ho7N7QxZIOCyuclvbjwuunRJrzM5sUk74aXrZ9FDEoxUV0So6NtuwlRjJBEPC
        cTaYNfJA2mQ15xNoya84m0Q8ZI0mQ8ps0kQ5eZvJNQXqdEqMn2XB9KscF61R5ckuJm1sbOt1KxY5TfVc
        or1k+iMRjxOitnycpttt822236t+Z7KMAUgoAyslAigUAZIlFGxRSAEMCmSgIBAHKo6WZEAUgBoWCoAa
        AGiWD0w4t0oxuMdzS3Te2Me7fkjnlycEJSSbpXS5vyXmWKt0drTaeOLFlxrJjzZ9TGOLHjwSWRRW63KU
        lyX+fT8/nzz1OXFmyY5Y8WJubc6TezSSXvPXGKhGUU05S22N3UTUJ6vJB89LpsOmxyX6ZP3W13Ttfc8O
        LFLJi0uLKv8AmyTySXilckn5PY6yklKcl/SkkenCtDDGoy5xlkxYpvdbtuCbd/Ns+3DNPJGVtOpSW3RK
        TSXuSPNwqLW3Rfob7xPqua9VzX4F+Jo8pIpDzkjSZDwnE0mDXyQOiZk1skDSZDXnE2mQ52vy7VR2ijDN
        j2d0Nve/MmSVIRR9XBHlbOhwOOarfPYvhx2vnPzf9PuejDGlZiRzTqZGgBoWCAFAGSRLKIKKKBolgqFg
        QBQA0QHLOlGSAFACSkBAIAbFIGUGrTatJq1dblfNX5GZJtNLZlR9Jpo53C9Lpo6XHOPPUTlctv8Ayyql
        8lfc/KZf4THm4dXmnmyRe0FHa/8AzFcN+rPdHvHH+XFRT639eZhhwQko6LDNTuXjavULlBQj5Rb/AEq+
        vrR6J5cuNvX6iFSrgxY+bt+NdX8lZhRi/wCVB7c5M3MOdTllzq9mTPg0mli7SaTpyr+Hn83Ryg56NQwc
        3CE8mV+u6Xq38jTrJc/FpRPfE+cqd7Mk8bav44umv89T68MsckIyXVKVdafI4NNN36HrLM11qX8XP89S
        93Fi2g3wfVOPy5r7MjxNchxGMsCfwyT7P3X+TO65otpmtm08l1TNKSFGnkidEQ0tS6TZ1irMM4ig8uVL
        ys9PJHPmfY6HTqEUjyzds6JGXEdT4WNy/U/dh/E/P6GYQ4pUGz5Y9hzEARQIUBQAoAbJSKIKJQJKQIUB
        QAgCSkDmI6GR290SwNCwQBkkSwVCwRQKRAdXh2LTyjCMo5tRmlKSjgxtQjH/AMufz5L1Pka6erjKUoTj
        jxpbya4pfDl+t/I9GJY2kmm34ckbubh2LxI+JtwclD/TaeUtRqMj58peSfzrofPxa/UrA+7uS597lShF
        LxSW7Xlt9DrLFDiV7f8AWO7M+J6LNkcYqOOEMEbjpcWSM9Rix2nKbXnPpf0M6HXYMEXKSm+8e+WcajKX
        TzUei2S9C5cUpOlW39Ke6X7g3HTwyLd42ky5FLFkx5IrPjy7XUq8nSppr0+T6w77VZITp49RBVJOPsSj
        e65vbqt7/Uj4YJrnF8t90zmY+L5V8TjNd1T+6Pv93HojyWzdwcag/ijKPde8v7/gy8T6DiN/DqYT+GcZ
        dk+f26nOSa5o0mbMcjXRtdvI5tJ80aKW2XxRT7r3X+DPB4DiONxvh05RvCr9YtpP6HfFKvzGZb8jW4Fw
        9xtzi4yvmmqaOmTJ4GUj6CCPPZs+c4vqvEyOn7kLjHv6v/PRHqxx4Uc2zSo6EGiWCKCAMkiWUS2CQBkk
        SyjQsEUEiAySJYIAyIDmJHUyNACQEAQAkAgEAb/BtcsGVZGnJbJxai6lUlVp+Tujw9o6N6vB3adO4vxW
        zvdeB1w5O7lZvcGk1BQ00W9Xk3eJlfux02FP9MvK+Vy8vnVfP7Tiu973Vv8Akxrhgt3OT8V1rouXV7Wd
        cL9nhx/mfN+CHS6TDHLFY9bWoUvdybH4Lyem99b6W1TJm1Gtnhk8umTxNbx4vb4fSqvy5rxLGGNSXDP2
        vGtjz4hxFqWXHLTaeGV78eXJGLcr6S222k+520fZ2OseWOXI4KnGLlsvC1s3XgzOTM904q+ro4x9k8xA
        EAbWDX5YdJuvSXvL8mXCL6Ftm/g44/1wvvB1+H/c5vD4MvEdDDxPDP8AVtfpP3fz0ObxyRbN1SUkldry
        fWv+jlVOzRo8X1PhY2l8c7jHsvOX2/mdcceJmWz5k9RgQCAEAgDJAogEAZApACARAZIAgDIyDncje5ki
        gURgeRNwRQQA8ibgi7ggD0x5HG6bW5OMqbW6L6xfquxmUFKrSdbryfiVOjHkXcgFBADyJuCKAAEbguRN
        wemLNKHOMpR+TaDSfMDn1E8jTnJyaVK/JBRUeRbPPkNyCUEAJNwI3KJQSAMjO5SKCKDIm4Im4FFAogMi
        bg5p0MkAJAIBACAQAgEAQBAEAQBAEAQAgEAQAgEAQAgCgBBRAIAUAKBSAEASAQBQAkBz0aMjZKFiWgQA
        pigNkoWBQKAGyULAtAgBsUCsUAAFCgVkoEUEANkpFsrLRCAFCgNkpFIoJADZKQGy0CQBkiUUrJSAmgRG
        DKyUgQoCUGjtLaMkAKQsDtJaBFBUAO0WgVCwQApCwW0loUVFBUAW0lotFRbIQBbRZaHaS0KCikGgUaJa
        FFRbBADQtAqJaBFApBugNEtFEAigyozaBULQIoFIlgaFoH//2Q==
</value>
  </data>
</root>